// cin (iostream) - buffer

int x;
std::cin >> x;

Вход:
.....5123\n

// x == 5123
// В примера се игнорват всички интервали, нови редове и табове.

char str[128];
std::cin >> str;

Вход:
\n
....\n
...........qwerty\n

// str == "qwerty"
// В примера се игнорват всички интервали, нови редове и табове.


char str[128];
std::cin.getline(str, 128);

Вход:
.............\n

// в str ще има има 13 интервала


char str[128];
std::cin.getline(str, 128);

Вход:
.............qwerty..............\n

// str == ".............qwerty.............."


int size;
char str[128];
std::cin>>size;
std::cin.getline(str, 128);

Вход:
7     alabala\n

// size == 7
// str == "     alabala"

Решение 1:

// width
std::cin >> str;

// Важно е въведеният низ да е с по-малко от 127 символа


Решение 2:
std::cin.ignore

std::cin.ignore има няколко "синтаксиса"
https://en.cppreference.com/w/cpp/io/basic_istream/ignore
std::cin.ignore(n), където n e число и означава, че ще бъдат игнорнати (прочетени без никъде да се записват) n символа от входния буфер/поток.
std::cin.ignore(n, c), където n e число и c е символ, и означава, че ще бъдат игнорнати (прочетени без никъде да се записват) НАЙ–МНОГО n символа от входния буфер/поток, докато не се игнорне сиволът c.
Изключение се прави, ако n заема стойността на std::numeric_limits<std::streamsize>::max() (в библиотеката <limits>), в който случай просто игнорва, докато не бъде игнорнът символът c.

std::cin>>size;
std::cin.ignore(std::numeric_limits<std::streamsize>::max(), ' ');  // игнорваме всички интервали между 7 и alabala
std::cin.getline(str, 128);

Вход:
7     alabala\n

// size == 7
// str == "alabala"

проблемът е, ако входът е:
7
alabala\n

// което ще забие, защото няма въведени интервали

или пък:
7.......
alabala\n

// size == 7
// str == ""

Решение 3:
Използваме std::cin.peek() и std::cin.ignore()
std::cin.peek() - казва кой е първият символ на буфера

std::cin>>size;
while(std::isspace((unsigned char)std::cin.peek())!=0) // докато имаме "интервален символ" в "четящият край" на буфера
    std::cin.ignore();                                 // игнорва един символ
std::cin.getline(str, 128);

Решение 4:

std::cin>>size;
std::cin>>std::ws;
std::cin.getline(str, 128);

Абсолютно същото (почти) като Решение 3, но по-кратко.
std::cin>>std::ws; е като цикъла while

// (Може и да има и друго решение на проблема, за което просто не се сещам)
